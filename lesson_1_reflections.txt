How did viewing a diff between two versions of a file help you see the bug that was introduced?
It only displayed lines of code that changed, before and after
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Be able to see different changes and when they happen. Debug problems after changes are made.
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Be able to choose logical point in the code changes that represent a single change or group of related changes.
When adding a feature, it can difficult to know when to commit when there is large number of changes, so breaking it up into smaller related changes would be best with tie back to overall feature change.
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Changes are very likely in multiple files, so Git handle that.
How might using version control make you more confident to make changes that could break something?
Be able to checkout difference versions and determine commit that introduced the bugs or change of behavior.
Now that you have your workspace set up, what do you want to try using Git for?
source code management for software projects.
What happens when you initialize a repository? Why do you need to do it?
creates .git file.   you will need to initialize a repository.
